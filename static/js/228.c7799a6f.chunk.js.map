{"version":3,"file":"static/js/228.c7799a6f.chunk.js","mappings":"iNA8CA,UAzCgB,WACZ,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAASC,EAAAA,EAAAA,MAaf,OAXAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAmBH,EAAOI,SACrBC,MAAK,SAAAC,GACFT,EAAgBS,EAAKC,QAExB,IACAC,OAAM,SAAAV,GACHC,GAAS,EACZ,GACR,GAAE,CAACC,EAAOI,WAGP,gCACI,wCAECN,IAAS,SAAC,UAAD,KAEV,0BACI,wBACKF,EAAaa,KAAI,SAAAC,GAAM,OACpB,yBACI,4BACI,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,cAHVF,EAAOG,GADI,UAc3C,C,iFC5Cc,SAASC,IACpB,OACI,+BACA,kCAGP,C,mMCJKC,EAAM,+BACNC,EAAU,mCAGHC,EAAa,mCAAG,WAAOC,GAAP,yFACFC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,wCACiBC,EADjB,gCACgDE,IAF9C,uBACjBZ,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAObc,EAAW,mCAAG,WAAOC,EAAOH,GAAd,uFACFC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACUC,EADV,kBAC2BK,EAD3B,gCACwDH,EADxD,yBADE,cACnBI,EADmB,yBAIlBA,EAAShB,MAJS,2CAAH,wDAOXiB,EAAkB,mCAAG,WAAMV,GAAN,uFACTM,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLF,EADK,oBACSG,EADT,oBADS,cAC1BM,EAD0B,yBAIzBA,EAAShB,MAJgB,2CAAH,sDAOlBkB,EAAe,mCAAG,WAAMX,GAAN,uFACNM,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLF,EADK,4BACiBG,EADjB,oBADM,cACvBM,EADuB,yBAItBA,EAAShB,MAJa,2CAAH,sDAOfH,EAAkB,mCAAG,WAAMU,GAAN,uFACTM,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLF,EADK,4BACiBG,EADjB,2BADS,cAC1BM,EAD0B,yBAIzBA,EAAShB,MAJgB,2CAAH,qD","sources":["components/MovieReviews/Reviews.jsx","pages/NotFound.jsx","shared/api/fetchApi.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMoviesReviews } from \"shared/api/fetchApi\";\nimport NotFound from \"../../pages/NotFound\";\n\nconst Reviews = () => {\n    const [movieReviews, setMovieReviews] = useState([]);\n    const [error, setError] = useState(false);\n    // const location = useLocation();\n    const params = useParams();\n\n    useEffect(() => {\n        fetchMoviesReviews(params.movieId)\n            .then(data => {\n                setMovieReviews(data.results);\n                    //   console.log(data.results);\n            })\n            .catch(error => {\n                setError(true);\n            });\n    }, [params.movieId]);\n\n    return (\n        <section>\n            <h2>Our mission</h2>\n\n            {error && <NotFound />}\n\n            <div>\n                <ul>\n                    {movieReviews.map(review => (\n                        <li key={review.id}>\n                            <div>\n                                <p>{review.author}</p>\n                                <p>{review.content}</p>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n\n            </div>\n\n        </section>\n    );\n};\n\nexport default Reviews;\n","export default function NotFound() {\n    return (\n        <>\n        <p> 404 </p>\n        </>\n    );\n}","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ac72fb525d19148bd97395d88b810c51';\n\n\nexport const fetchTrending = async (page) => {\n    const { data } = await axios.get(\n      `${URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return data;\n};\n\nexport const fetchMovies = async (query, page,) => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\n\n//movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["useState","movieReviews","setMovieReviews","error","setError","params","useParams","useEffect","fetchMoviesReviews","movieId","then","data","results","catch","map","review","author","content","id","NotFound","URL","API_KEY","fetchTrending","page","axios","fetchMovies","query","response","fetchMoviesDetails","fetchMoviesCast"],"sourceRoot":""}