{"version":3,"file":"static/js/305.55e7a7f2.chunk.js","mappings":"0NA2DA,UArDgB,WACZ,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAASC,EAAAA,EAAAA,MAYf,OAVAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBH,EAAOI,SAClBC,MAAK,SAAAC,GACFT,EAAaS,EAAKC,KACrB,IACAC,OAAM,SAAAV,GACHC,GAAS,EACZ,GACR,GAAE,CAACC,EAAOI,WAGP,gCACI,yCACA,kPAMCN,IAAS,SAAC,UAAD,KAEV,0BACI,wBACKF,EAAUa,KAAI,SAAAC,GAAK,OAChB,2BACI,gBACIC,MAAO,IACPC,IACAF,EAAMG,aAAN,0CACyCH,EAAMG,cACzCC,EAENC,IAAG,UAAKL,EAAMM,SAClB,4BACI,uBAAIN,EAAMO,aACV,uBAAIP,EAAMM,YAXTN,EAAMQ,QADC,UAsBvC,C,iFCzDc,SAASC,IACpB,OACI,+BACA,kCAGP,C,mMCJKC,EAAM,+BACNC,EAAU,mCAGHC,EAAa,mCAAG,WAAOC,GAAP,yFACFC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,wCACiBC,EADjB,gCACgDE,IAF9C,uBACjBjB,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAObmB,EAAW,mCAAG,WAAOC,EAAOH,GAAd,uFACFC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACUC,EADV,kBAC2BK,EAD3B,gCACwDH,EADxD,yBADE,cACnBI,EADmB,yBAIlBA,EAASrB,MAJS,2CAAH,wDAOXsB,EAAkB,mCAAG,WAAMC,GAAN,uFACTL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLS,EADK,oBACSR,EADT,oBADS,cAC1BM,EAD0B,yBAIzBA,EAASrB,MAJgB,2CAAH,sDAOlBH,EAAe,mCAAG,WAAM0B,GAAN,uFACNL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLS,EADK,4BACiBR,EADjB,oBADM,cACvBM,EADuB,yBAItBA,EAASrB,MAJa,2CAAH,sDAOfwB,EAAkB,mCAAG,WAAMD,GAAN,uFACTL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLS,EADK,4BACiBR,EADjB,2BADS,cAC1BM,EAD0B,yBAIzBA,EAASrB,MAJgB,2CAAH,qD","sources":["components/MovieCast/Cast.jsx","pages/NotFound.jsx","shared/api/fetchApi.js"],"sourcesContent":["import { useEffect, useState  } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMoviesCast } from \"shared/api/fetchApi\";\nimport NotFound from \"../../pages/NotFound\";\nimport imageplaceholder from '../../assets/images/noposter.jpg';\n\nconst Mission = () => {\n    const [movieCast, setMovieCast] = useState([]);\n    const [error, setError] = useState(false);\n    // const location = useLocation();\n    const params = useParams();\n\n    useEffect(() => {\n        fetchMoviesCast(params.movieId)\n            .then(data => {\n                setMovieCast(data.cast);\n            })\n            .catch(error => {\n                setError(true);\n            });\n    }, [params.movieId]);\n\n    return (\n        <section>\n            <h2>Our mission</h2>\n            <p>\n                Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ut, nesciunt\n                veniam. Excepturi itaque, voluptates fugiat perspiciatis quo saepe! Iste\n                eaque porro eveniet error dicta, modi ipsum hic quis minima inventore.\n            </p>\n\n            {error && <NotFound />}\n\n            <div>\n                <ul>\n                    {movieCast.map(actor => (\n                        <li key={actor.cast_id}>\n                            <img\n                                width={200}\n                                src={\n                                actor.profile_path\n                                    ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                                    : imageplaceholder\n                            }\n                                alt={`${actor.name}`} />\n                            <div>\n                                <p>{actor.character}</p>\n                                <p>{actor.name}</p>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n                \n            </div>\n\n        </section>\n    );\n};\n\nexport default Mission;\n","export default function NotFound() {\n    return (\n        <>\n        <p> 404 </p>\n        </>\n    );\n}","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ac72fb525d19148bd97395d88b810c51';\n\n\nexport const fetchTrending = async (page) => {\n    const { data } = await axios.get(\n      `${URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return data;\n};\n\nexport const fetchMovies = async (query, page,) => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\n\n//movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["useState","movieCast","setMovieCast","error","setError","params","useParams","useEffect","fetchMoviesCast","movieId","then","data","cast","catch","map","actor","width","src","profile_path","imageplaceholder","alt","name","character","cast_id","NotFound","URL","API_KEY","fetchTrending","page","axios","fetchMovies","query","response","fetchMoviesDetails","id","fetchMoviesReviews"],"sourceRoot":""}