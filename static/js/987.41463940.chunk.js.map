{"version":3,"file":"static/js/987.41463940.chunk.js","mappings":"oRAIMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC3B,OACI,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACI,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGZ,E,mBCuCD,EAzDqB,SAAC,GAAc,EAAZE,MAAa,IAAD,IAChC,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTC,EAAY,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAa7C,OAVAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAmBN,EAAOO,SACrBC,MAAK,SAAAC,GACFd,EAAac,EAChB,IACAC,OAAM,SAAAd,GACHC,GAAS,EACZ,GACR,GAAE,CAACG,EAAOO,WAGP,6BACI,SAACnB,EAAD,CAAUC,GAAIa,EAAd,+BACA,2BACKN,IAAS,SAACe,EAAA,QAAD,IAETjB,IACG,4BACI,gBAAKkB,IACDlB,EAAUmB,YAAV,0CACyCnB,EAAUmB,aAC7CC,EAENC,IAAG,UAAKrB,EAAUsB,UACtB,4BACI,uBAAItB,EAAUsB,SACd,uBAAItB,EAAUuB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SACnD,uBAAI3B,EAAU4B,kBAI1B,4BACI,2BACI,yBACI,SAAC,KAAD,CAAMjC,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGR,SAAC,EAAAkC,SAAD,CAAUC,UAAU,gDAApB,UACI,SAAC,KAAD,cAMvB,C,iFC/Dc,SAASb,IACpB,OACI,+BACA,kCAGP,C,mMCJKc,EAAM,+BACNC,EAAU,mCAGHC,EAAa,mCAAG,WAAOC,GAAP,yFACFC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,wCACiBC,EADjB,gCACgDE,IAF9C,uBACjBnB,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAObqB,EAAW,mCAAG,WAAOC,EAAOH,GAAd,uFACFC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACUC,EADV,kBAC2BK,EAD3B,gCACwDH,EADxD,yBADE,cACnBI,EADmB,yBAIlBA,EAASvB,MAJS,2CAAH,wDAOXH,EAAkB,mCAAG,WAAM2B,GAAN,uFACTJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLQ,EADK,oBACSP,EADT,oBADS,cAC1BM,EAD0B,yBAIzBA,EAASvB,MAJgB,2CAAH,sDAOlByB,EAAe,mCAAG,WAAMD,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLQ,EADK,4BACiBP,EADjB,oBADM,cACvBM,EADuB,yBAItBA,EAASvB,MAJa,2CAAH,sDAOf0B,EAAkB,mCAAG,WAAMF,GAAN,uFACTJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACLQ,EADK,4BACiBP,EADjB,2BADS,cAC1BM,EAD0B,yBAIzBA,EAASvB,MAJgB,2CAAH,qD","sources":["shared/BackLinkButton/BackLink.jsx","pages/MovieDetails.jsx","pages/NotFound.jsx","shared/api/fetchApi.js"],"sourcesContent":["import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n    return (\n        <StyledLink to={to}>\n            <HiArrowLeft size=\"24\" />\n            {children}\n        </StyledLink>\n    );\n};\n","import { useEffect, useState, Suspense } from \"react\";\nimport { useLocation, useParams, Link, Outlet } from \"react-router-dom\";\nimport { fetchMoviesDetails } from \"shared/api/fetchApi\";\nimport { BackLink } from \"shared/BackLinkButton/BackLink\";\nimport imageplaceholder from '../assets/images/noposter.jpg';\nimport NotFound from \"./NotFound\";\n\n\nconst MovieDetails = ({ movie }) => {\n    const [movieItem, setMovieItem] = useState(null);\n    const [error, setError] = useState(false);\n    const location = useLocation();\n    const params = useParams();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n    \n\n    useEffect(() => {\n        fetchMoviesDetails(params.movieId)\n            .then(data => {\n                setMovieItem(data);\n            })\n            .catch(error => {\n                setError(true);\n            });\n    }, [params.movieId]);\n\n    return (\n        <main>\n            <BackLink to={backLinkHref}>Back to products</BackLink>\n            <div>\n                {error && <NotFound />}\n\n                {movieItem && (\n                    <div>\n                        <img src={\n                            movieItem.poster_path\n                                ? `https://image.tmdb.org/t/p/w200/${movieItem.poster_path}`\n                                : imageplaceholder\n                        }\n                            alt={`${movieItem.title}`} />\n                        <div>\n                            <p>{movieItem.title}</p>\n                            <p>{movieItem.genres.map(genre => genre.name).join(', ')}</p>\n                            <p>{movieItem.overview}</p>\n                        </div>\n                    </div>\n                )}\n                <div>\n                    <ul>\n                        <li>\n                            <Link to=\"cast\">Cast</Link>\n                        </li>\n                        <li>\n                            <Link to=\"reviews\">Reviews</Link>\n                        </li>\n                    </ul>\n                    <Suspense fallback={<div>Loading subpage...</div>}>\n                        <Outlet />\n                    </Suspense>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default MovieDetails;","export default function NotFound() {\n    return (\n        <>\n        <p> 404 </p>\n        </>\n    );\n}","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ac72fb525d19148bd97395d88b810c51';\n\n\nexport const fetchTrending = async (page) => {\n    const { data } = await axios.get(\n      `${URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return data;\n};\n\nexport const fetchMovies = async (query, page,) => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\n\n//movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["StyledLink","styled","Link","BackLink","to","children","size","movie","useState","movieItem","setMovieItem","error","setError","location","useLocation","params","useParams","backLinkHref","state","from","useEffect","fetchMoviesDetails","movieId","then","data","catch","NotFound","src","poster_path","imageplaceholder","alt","title","genres","map","genre","name","join","overview","Suspense","fallback","URL","API_KEY","fetchTrending","page","axios","fetchMovies","query","response","id","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}