{"version":3,"file":"static/js/891.3883b0be.chunk.js","mappings":"qKAsBA,IAnBkB,SAAC,GAAe,IAAD,IAAZA,EAAY,EAAZA,MAEjB,OACI,iCACI,gBACIC,IAAKD,EAAME,YAAN,yCAC+BF,EAAME,aACxCC,EACFC,IAAG,UAAEJ,EAAMK,sBAAR,QAA0BL,EAAMM,KACnCC,QAAQ,UAEZ,4BACI,iCAAIP,EAAMQ,aAAV,QAAmBR,EAAMM,QACzB,uBAAIN,EAAMS,oBAIzB,C,uGClBYC,EAAYC,EAAAA,GAAAA,GAAH,2GAMTC,EAAcD,EAAAA,GAAAA,GAAH,0H,6ICexB,EAjBkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAGjB,OACG,SAAC,IAAD,UACEF,EAAOG,KAAI,SAAAC,GAAK,OACb,SAAC,IAAD,WACQ,SAAC,KAAD,CAASC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAlD,UACI,SAACQ,EAAA,EAAD,CAAWtB,MAAOiB,OAFZA,EAAME,GADX,KASxB,E,oBCqCD,EAnDa,WACT,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAoCD,EAAAA,EAAAA,UAAS,GAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAcC,OAAOH,EAAYI,IAAI,SACrCD,OAAOH,EAAYI,IAAI,SACvB,GAGNC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAcJ,GACTK,MAAK,SAAAC,GAEFZ,EAAUY,EAAKC,SACfX,EAAcU,EAAKE,YAEtB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACnB,GAAE,CAACV,EAAaD,IAMjB,OACI,6BACI,4CAEA,yBACI,SAAC,EAAD,CAAWhB,OAAQA,MAItBY,EAAa,IACV,SAAC,IAAD,CACIkB,WAAW,MACXC,UAAU,IACVC,aAjBQ,SAAAC,GACpBjB,EAAe,CAAEkB,KAAMD,EAAEE,SAAW,GACvC,EAgBeC,mBAAoB,EACpBC,UAAWzB,EACX0B,cAAc,IACdC,sBAAuB,KACvBC,sBAAsB,WACtBC,gBAAgB,aAChBC,UAAWzB,EAAc,MAK5C,C,iGCpDY0B,GAAmB7C,EAAAA,EAAAA,IAAO8C,IAAP9C,CAAH,ugBAchB,SAAA+C,GAAC,MAAI,OAAJ,IAKC,SAAAA,GAAC,MAAI,SAAJ,IAKH,SAAAA,GAAC,MAAI,SAAJ,G,mMC1BRC,EAAM,+BACNC,EAAU,mCAGH1B,EAAa,mCAAG,WAAOa,GAAP,yFACFc,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACiBC,EADjB,gCACgDb,IAF9C,uBACjBX,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOb0B,EAAW,mCAAG,WAAOC,EAAOhB,GAAd,uFACFc,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACUC,EADV,kBAC2BG,EAD3B,gCACwDhB,EADxD,yBADE,cACnBiB,EADmB,yBAIlBA,EAAS5B,MAJS,2CAAH,wDAOX6B,EAAkB,mCAAG,WAAM9C,GAAN,uFACT0C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLxC,EADK,oBACSyC,EADT,oBADS,cAC1BI,EAD0B,yBAIzBA,EAAS5B,MAJgB,2CAAH,sDAOlB8B,EAAe,mCAAG,WAAM/C,GAAN,uFACN0C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLxC,EADK,4BACiByC,EADjB,oBADM,cACvBI,EADuB,yBAItBA,EAAS5B,MAJa,2CAAH,sDAOf+B,EAAkB,mCAAG,WAAMhD,GAAN,uFACT0C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLxC,EADK,4BACiByC,EADjB,2BADS,cAC1BI,EAD0B,yBAIzBA,EAAS5B,MAJgB,2CAAH,qD","sources":["components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","shared/Pagination/Pagination.styled.js","shared/api/fetchApi.js"],"sourcesContent":["import React from \"react\";\nimport imageplaceholder from '../../assets/images/noposter.jpg';\n\nconst MovieItem = ({ movie }) => {\n\n    return (\n        <>\n            <img\n                src={movie.poster_path\n                ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n                : imageplaceholder}\n                alt={movie.original_title ?? movie.name}\n                loading=\"lazy\"\n            />\n            <div>\n                <p>{movie.title ?? movie.name}</p>\n                <p>{movie.release_date}</p>\n            </div>\n        </>\n    )\n};\n\nexport default MovieItem;","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.li`\n  border: 1px solid lightgrey;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\n\n","import React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport MovieItem from \"components/MovieItem/MovieItem\";\nimport { Container, CardWrapper } from \"./MovieList.styled\";\n\n\nconst MovieList = ({ trends }) => {\n    const location = useLocation();\n    // const shouldRenderLoadMoreButton = items.length > 0 && !loading;\n\n    return (\n       <Container>\n        {trends.map(trend => (\n            <CardWrapper key={trend.id}>\n                    <NavLink to={`movies/${trend.id}`} state={{ from: location }}>\n                        <MovieItem movie={trend} />\n                    </NavLink>\n                </CardWrapper>\n            ))}\n        </Container>\n    )\n};\n\nexport default MovieList;","import MovieList from \"components/MovieList/MovieList\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchTrending } from '../shared/api/fetchApi'\nimport { PaginationStyled } from \"shared/Pagination/Pagination.styled\";\n\n\nconst Home = () => {\n    const [trends, setTrends] = useState([]);\n    const [totalPages, setTotalPages] = useState(0);\n    const [searchQuery, setSearchQuery] = useSearchParams();\n    const currentPage = Number(searchQuery.get('page'))\n        ? Number(searchQuery.get('page'))\n        : 1;\n\n\n    useEffect(() => {\n        fetchTrending(currentPage)\n            .then(data => {\n\n                setTrends(data.results);\n                setTotalPages(data.total_pages);\n\n            })\n            .catch(error => console.log(error));\n    }, [currentPage, setSearchQuery]);\n\n    const handlePageClick = e => {\n        setSearchQuery({ page: e.selected + 1 });\n    };\n\n    return (\n        <main>\n            <h1>Trending today</h1>\n            {/* {loading && <p>loaad....</p>} */}\n            <ul>\n                <MovieList trends={trends} />\n\n            </ul>\n\n            {totalPages > 1 && (\n                <PaginationStyled\n                    breakLabel=\"...\"\n                    nextLabel=\">\"\n                    onPageChange={handlePageClick}\n                    pageRangeDisplayed={5}\n                    pageCount={totalPages}\n                    previousLabel=\"<\"\n                    renderOnZeroPageCount={null}\n                    disabledLinkClassName=\"disabled\"\n                    activeClassName=\"activePage\"\n                    forcePage={currentPage - 1}\n                />\n            )}\n        </main>\n    );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n// import theme from '../../theme';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  font-size: 16px;\n  font-weight: 700;\n\n  @media (max-width: 479.98px) {\n    flex-wrap: wrap;\n  }\n\n  & li {\n    color: ${p => 'black'};\n\n    transition: color 250ms linear;\n\n    :hover:not(.disabled) {\n      color: ${p => '#333652'};\n    }\n  }\n\n  & .activePage {\n    color: ${p => '#FAD02C'};\n  }\n\n  & a {\n    padding: 0 8px;\n    cursor: pointer;\n  }\n\n  & a.disabled {\n    cursor: default;\n  }\n`;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ac72fb525d19148bd97395d88b810c51';\n\n\nexport const fetchTrending = async (page) => {\n    const { data } = await axios.get(\n      `${URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return data;\n};\n\nexport const fetchMovies = async (query, page,) => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\n\n//movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["movie","src","poster_path","imageplaceholder","alt","original_title","name","loading","title","release_date","Container","styled","CardWrapper","trends","location","useLocation","map","trend","to","id","state","from","MovieItem","useState","setTrends","totalPages","setTotalPages","useSearchParams","searchQuery","setSearchQuery","currentPage","Number","get","useEffect","fetchTrending","then","data","results","total_pages","catch","error","console","log","breakLabel","nextLabel","onPageChange","e","page","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","disabledLinkClassName","activeClassName","forcePage","PaginationStyled","ReactPaginate","p","URL","API_KEY","axios","fetchMovies","query","response","fetchMoviesDetails","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}